version: 2.1
orbs:
  cypress: cypress-io/cypress@1.16.1
  node: circleci/node@1.1

executors:
  chrome80-ff72:
    docker:
      - image: 'cypress/browsers:node13.6.0-chrome80-ff72'

# executors:
#   standard-node:
#     docker:
#       - image: "cimg/node:14.17.6"
#       - image: "circleci/redis:6.2.1-alpine"
#       - image: "circleci/postgres:12.3-postgis"
#         environment:
#           POSTGRES_USER: bloom-ci
#           # Never do this in production or with any sensitive / non-test data:
#           POSTGRES_HOST_AUTH_METHOD: trust
#           POSTGRES_DB: bloom
#   cypress-node:
#     docker:
#       - image: "cypress/base:14.17.0"
#       - image: "circleci/redis:6.2.1-alpine"
#       - image: "circleci/postgres:12.3-postgis"
#         environment:
#           POSTGRES_USER: bloom-ci
#           # Never do this in production or with any sensitive / non-test data:
#           POSTGRES_HOST_AUTH_METHOD: trust
#           POSTGRES_DB: bloom
#     environment:
#       PORT: "3100"
#       EMAIL_API_KEY: "SG.SOME-LONG-SECRET-KEY"
#       APP_SECRET: "CI-LONG-SECRET-KEY"
#       # DB URL for migration and seeds:
#       DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
#       # DB URL for the jest tests per ormconfig.test.ts
#       TEST_DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
#       REDIS_TLS_URL: "rediss://localhost:6379/0"
#       REDIS_URL: "redis://localhost:6379/0"
#       REDIS_USE_TLS: "0"
#       PARTNERS_PORTAL_URL: "http://localhost:3001"
#   puppeteer-node:
#     docker:
#       - image: "cimg/node:14.17.6-browsers"

jobs:
  setup:
#     executor: standard-node
    steps:
      - run:
          name: Envo Stuff
#           command: |
#             yarn test:backend:core:dbsetup
#             yarn test:backend:core
#             yarn test:e2e:backend:core
          environment:
            EMAIL: "e@mail.com"
#   setup:
#     executor: standard-node
#     steps:
#       - checkout
#       - run: yarn install --frozen-lockfile
#       - save_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#           paths:
#             - ~/
#   setup-with-db:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn test:backend:core:dbsetup
#   lint:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn lint
#   jest-shared-helpers:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn test:shared:helpers
#   jest-ui-components:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn test:shared:ui
#   jest-ui-components-a11y:
#     executor: puppeteer-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn test:shared:ui:a11y
#   jest-backend:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run:
#           name: DB Setup + Backend Core Tests
#           command: |
#             yarn test:backend:core:dbsetup
#             yarn test:backend:core
#             yarn test:e2e:backend:core
#           environment:
#             PORT: "3100"
#             EMAIL_API_KEY: "SG.SOME-LONG-SECRET-KEY"
#             APP_SECRET: "CI-LONG-SECRET-KEY"
#             # DB URL for migration and seeds:
#             DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
#             # DB URL for the jest tests per ormconfig.test.ts
#             TEST_DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
#             REDIS_TLS_URL: "rediss://localhost:6379/0"
#             REDIS_URL: "redis://localhost:6379/0"
#             REDIS_USE_TLS: "0"
#             CLOUDINARY_SIGNED_PRESET: "fake_secret"
#             CLOUDINARY_KEY: "fake_key"
#             CLOUDINARY_CLOUD_NAME: "exygy"
#             CLOUDINARY_SECRET: "fake_secret"
#             PARTNERS_PORTAL_URL: "http://localhost:3001"
#   build-public:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn build:app:public
#   build-partners:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn build:app:partners
#   unit-test-partners:
#     executor: standard-node
#     steps:
#       - restore_cache:
#           key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
#       - run: yarn test:app:partners:unit

workflows:
  version: 2
  build:
    jobs:
#       - setup
#       - lint:
#           requires:
#             - setup
#       - jest-shared-helpers:
#           requires:
#             - setup
#       - jest-ui-components:
#           requires:
#             - setup
#       - jest-ui-components-a11y:
#           requires:
#             - setup
#       - jest-backend:
#           requires:
#             - setup
#       - build-public:
#           requires:
#             - setup
#       - build-partners:
#           requires:
#             - setup
#       - unit-test-partners:
#           requires:
#             - setup

      - cypress/run:
          name: "cypress-partners"
          requires:
            - setup
          executor: chrome80-ff72
          browser: chrome
          store_artifacts: true

#       - cypress/run:
# #           name: "cypress-public"
#           requires:
#             - setup
#             executor: chrome80-ff72
#             browser: chrome
#             store_artifacts: true
#           executor: cypress-node
#           working_directory: sites/public
#           yarn: true
#           build: |
#             yarn test:backend:core:dbsetup
#           start: yarn dev:all-cypress
#           wait-on: "http://0.0.0.0:3000"
#           store_artifacts: true
#       - cypress/run:
#           name: "cypress-partners"
#           requires:
#             - setup
#           executor: cypress-node
#           working_directory: sites/partners
#           yarn: true
#           build: |
#             yarn test:backend:core:dbsetup
#           start: yarn dev:all-cypress
#           wait-on: "http://0.0.0.0:3001"
#           store_artifacts: true
